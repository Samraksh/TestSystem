# MSBuild configuration
#        exe - name of the executable
$msbuild_exe = "cmd.exe"
#        output_id - OutputDataReceived event SourceIdentifer
$msbuild_output_id = "MSBuild.OutputDataReceived"
#        error_id - ErrorDataReceived event SourceIdentifer
$msbuild_error_id = "MSBuild.ErrorDataReceived"
#        buildcompelte_id - msbuild build complete event SourceIdentifer
$msbuild_buildcomplete_id = "MSBuild.BuildCompleted"
#
$msbuild_framework_source = "$drive\MicroFrameworkPK_v4_0"

# Start-MSBuild
#   starts an instance of MSBuild
Function Start-MSBuild {
    Write-Sam "Starting MSBuild..."
    $process = New-Object System.Diagnostics.Process
    $process.StartInfo.Filename = $msbuild_exe
    $process.StartInfo.UseShellExecute = $FALSE
    $process.StartInfo.WindowStyle = "Hidden"
    # streams
    $process.StartInfo.RedirectStandardInput = $TRUE
    $process.StartInfo.RedirectStandardOutput = $TRUE
    $process.StartInfo.RedirectStandardError = $TRUE
    # start
    $process.Start() | Out-DBG
    # StandardInput stream
    $input = $process.StandardInput
    # StandardOutput stream
    Register-ObjectEvent $process OutputDataReceived $msbuild_output_id { $data = $EventArgs.Data; if(-not (IsNullOrEmpty($data))) { Write-Host "(o-msb) " $data; } if($data -like "[T]ime Elapsed*") { Write-Host "testhere"; New-Event $msbuild_buildcomplete_id | Out-DBG; } } | Out-DBG
    $process.BeginOutputReadLine()
    # StandardError stream
    Register-ObjectEvent $process ErrorDataReceived $msbuild_error_id { $data = $EventArgs.Data; if(-not (IsNullOrEmpty($data))) { Write-Host "(e-msb) " $data; } } | Out-DBG
    $process.BeginErrorReadLine()
    # Export handles up one level
    Set-Variable msbuild_process $process -Scope 1
    Set-Variable msbuild_input $input -Scope 1
    Write-Sam "MSBuild was started."
}

# Kill-MSBuild
#   kills MSBuild and unregisters associated events
Function Kill-MSBuild {
    Write-Sam "Killing MSBuild..."
    Unregister-Event $msbuild_output_id
    Unregister-Event $msbuild_error_id
    $msbuild_process.Kill()
    Write-Sam "MSBuild was killed."
}

Function Write-MSBuild {
    param($line)
    $msbuild_input.WriteLine($line)
}

Function SetEnv-MSBuild {
	Write-Sam "Setting environment."
	Write-MSBuild "$drive"
    Write-MSBuild "cd $msbuild_framework_source"
    Write-MSBuild "setenv_gcc.cmd $gdb_path_root"
    Write-MSBuild "cd Solutions\STM32F10x\NativeSample"
}

Function Clean-MSBuild {
    Write-Sam "Cleaning project..."
    Write-MSBuild "msbuild $project /target:clean"
    Wait-Event $msbuild_buildcomplete_id -Timeout 300 | Out-Null
    Remove-Event $msbuild_buildcomplete_id
    Write-Sam "Project cleaned."
}

Function Build-MSBuild {
    Write-Sam "Building project..."
    Write-MSBuild "msbuild $project /target:build"
    Wait-Event $msbuild_buildcomplete_id -Timeout 300 | Out-Null
    Remove-Event $msbuild_buildcomplete_id
    Write-Sam "Project built."
}